<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Advanced PDF to Word Converter</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .converter-container {
            max-width: 800px;
            margin: 50px auto;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
            background-color: #fff;
        }
        .file-upload {
            border: 2px dashed #ddd;
            padding: 30px;
            text-align: center;
            border-radius: 8px;
            margin-bottom: 20px;
            cursor: pointer;
            transition: all 0.3s;
        }
        .file-upload:hover {
            border-color: #0d6efd;
        }
        .file-upload.dragover {
            border-color: #0d6efd;
            background-color: #f0f7ff;
        }
        .preview-area {
            display: none;
            margin-top: 20px;
        }
        .progress {
            height: 10px;
            margin-top: 20px;
            display: none;
        }
        .features-list {
            margin-top: 30px;
        }
    </style>
</head>
<body>
    <div class="container converter-container">
        <h1 class="text-center mb-4">Advanced PDF to Word Converter</h1>
        <p class="text-center text-muted mb-4">Convert your PDF documents to editable Word files with Xerox-like quality</p>
        
        <div class="file-upload" id="dropArea">
            <input type="file" id="fileInput" accept=".pdf" style="display: none;">
            <div class="mb-3">
                <i class="bi bi-cloud-arrow-up fs-1 text-primary"></i>
            </div>
            <h5>Drag & Drop your PDF file here</h5>
            <p class="text-muted">or</p>
            <button class="btn btn-primary" id="selectFileBtn">Select File</button>
        </div>
        
        <div class="preview-area" id="previewArea">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div>
                    <strong id="fileName">File.pdf</strong>
                    <span class="text-muted ms-2" id="fileSize">(0 MB)</span>
                </div>
                <button class="btn btn-sm btn-outline-danger" id="removeFileBtn">
                    <i class="bi bi-x"></i> Remove
                </button>
            </div>
            
            <div class="mb-3">
                <label class="form-label">Conversion Options:</label>
                <div class="form-check mb-2">
                    <input class="form-check-input" type="checkbox" id="ocrCheck" checked>
                    <label class="form-check-label" for="ocrCheck">
                        Enable OCR (for scanned documents)
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="formattingCheck" checked>
                    <label class="form-check-label" for="formattingCheck">
                        Preserve original formatting
                    </label>
                </div>
            </div>
            
            <button class="btn btn-success w-100" id="convertBtn">
                <i class="bi bi-file-earmark-word"></i> Convert to Word
            </button>
        </div>
        
        <div class="progress" id="progressBar">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%"></div>
        </div>
        
        <div class="alert alert-danger mt-3" id="errorAlert" style="display: none;"></div>
        
        <div class="features-list">
            <h5 class="mb-3">Key Features:</h5>
            <ul>
                <li>High-quality conversion with OCR technology</li>
                <li>Preserves original layout and formatting</li>
                <li>Handles both text-based and scanned PDFs</li>
                <li>Secure processing - files deleted after conversion</li>
                <li>Supports PDFs up to 50MB in size</li>
            </ul>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const fileInput = document.getElementById('fileInput');
            const selectFileBtn = document.getElementById('selectFileBtn');
            const dropArea = document.getElementById('dropArea');
            const previewArea = document.getElementById('previewArea');
            const fileName = document.getElementById('fileName');
            const fileSize = document.getElementById('fileSize');
            const removeFileBtn = document.getElementById('removeFileBtn');
            const convertBtn = document.getElementById('convertBtn');
            const progressBar = document.getElementById('progressBar');
            const errorAlert = document.getElementById('errorAlert');
            
            let currentFile = null;
            
            // File selection
            selectFileBtn.addEventListener('click', () => fileInput.click());
            
            fileInput.addEventListener('change', handleFileSelect);
            
            // Drag and drop
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, preventDefaults, false);
            });
            
            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }
            
            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.addEventListener(eventName, highlight, false);
            });
            
            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, unhighlight, false);
            });
            
            function highlight() {
                dropArea.classList.add('dragover');
            }
            
            function unhighlight() {
                dropArea.classList.remove('dragover');
            }
            
            dropArea.addEventListener('drop', handleDrop, false);
            
            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;
                if (files.length) {
                    handleFileSelect({ target: { files: files } });
                }
            }
            
            function handleFileSelect(e) {
                const file = e.target.files[0];
                if (!file) return;
                
                if (!file.name.toLowerCase().endsWith('.pdf')) {
                    showError('Please select a PDF file');
                    return;
                }
                
                if (file.size > 50 * 1024 * 1024) {
                    showError('File size exceeds 50MB limit');
                    return;
                }
                
                currentFile = file;
                updateFilePreview();
            }
            
            function updateFilePreview() {
                fileName.textContent = currentFile.name;
                fileSize.textContent = `(${(currentFile.size / (1024 * 1024)).toFixed(2)} MB)`;
                dropArea.style.display = 'none';
                previewArea.style.display = 'block';
                hideError();
            }
            
            removeFileBtn.addEventListener('click', () => {
                currentFile = null;
                fileInput.value = '';
                previewArea.style.display = 'none';
                dropArea.style.display = 'block';
                hideError();
            });
            
            convertBtn.addEventListener('click', convertFile);
            
            function convertFile() {
                if (!currentFile) {
                    showError('No file selected');
                    return;
                }
                
                const useOCR = document.getElementById('ocrCheck').checked;
                const preserveFormatting = document.getElementById('formattingCheck').checked;
                
                const formData = new FormData();
                formData.append('file', currentFile);
                formData.append('ocr', useOCR);
                formData.append('formatting', preserveFormatting);
                
                // Show progress
                convertBtn.disabled = true;
                progressBar.style.display = 'block';
                const progressBarInner = progressBar.querySelector('.progress-bar');
                progressBarInner.style.width = '0%';
                
                // Simulate progress (in real app, you'd use XHR with progress events)
                let progress = 0;
                const progressInterval = setInterval(() => {
                    progress += 5;
                    if (progress > 90) clearInterval(progressInterval);
                    progressBarInner.style.width = `${progress}%`;
                }, 200);
                
                // Send to server
                fetch('/convert', {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    clearInterval(progressInterval);
                    progressBarInner.style.width = '100%';
                    
                    if (!response.ok) {
                        return response.json().then(err => { throw new Error(err.error || 'Conversion failed'); });
                    }
                    return response.blob();
                })
                .then(blob => {
                    // Create download link
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = currentFile.name.replace('.pdf', '.docx') || 'converted.docx';
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(a);
                    
                    // Reset UI
                    setTimeout(() => {
                        progressBar.style.display = 'none';
                        convertBtn.disabled = false;
                    }, 1000);
                })
                .catch(error => {
                    clearInterval(progressInterval);
                    progressBar.style.display = 'none';
                    convertBtn.disabled = false;
                    showError(error.message);
                });
            }
            
            function showError(message) {
                errorAlert.textContent = message;
                errorAlert.style.display = 'block';
            }
            
            function hideError() {
                errorAlert.style.display = 'none';
            }
        });
    </script>
</body>
</html>
